<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.openapi.mapper.UserMapper">

    <!-- 결과 매핑 -->
    <resultMap id="UserResultMap" type="com.example.openapi.dto.UserDto">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="email" property="email" />
        <result column="age" property="age" />
    </resultMap>

    <!-- 모든 사용자 조회 -->
    <select id="selectAllUsers" resultMap="UserResultMap">
        SELECT id, name, email, age
        FROM users
        ORDER BY id
    </select>

    <!-- ID로 사용자 조회 -->
    <select id="selectUserById" parameterType="long" resultMap="UserResultMap">
        SELECT id, name, email, age
        FROM users
        WHERE id = #{id}
    </select>

    <!-- 사용자 생성 -->
    <insert id="insertUser" parameterType="com.example.openapi.dto.UserDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (name, email, age)
        VALUES (#{name}, #{email}, #{age})
    </insert>

    <!-- 사용자 수정 -->
    <update id="updateUser" parameterType="com.example.openapi.dto.UserDto">
        UPDATE users
        SET name = #{name}, email = #{email}, age = #{age}
        WHERE id = #{id}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteUser" parameterType="long">
        DELETE FROM users
        WHERE id = #{id}
    </delete>

    <!-- 이름으로 사용자 검색 -->
    <select id="selectUsersByName" parameterType="string" resultMap="UserResultMap">
        SELECT id, name, email, age
        FROM users
        WHERE name LIKE CONCAT('%', #{name}, '%')
        ORDER BY id
    </select>

</mapper> 